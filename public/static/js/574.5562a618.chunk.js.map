{"version":3,"file":"static/js/574.5562a618.chunk.js","mappings":"uJA+BA,IA5BoB,SAAH,GAAqB,IAAD,EAAdA,EAAO,EAAPA,QACnB,OACI,iCACI,gBAAKC,UAAU,sBAAqB,UAChC,SAAC,KAAI,CAACC,GAAIC,GAAsB,mBAAeH,EAAQI,KAAM,UACzD,gBACIC,KAAY,OAAPL,QAAO,IAAPA,GAAY,QAAL,EAAPA,EAASM,WAAG,WAAL,EAAP,EAAcC,MAAOC,EAAAA,GAC1BP,UAAU,wBACVQ,IAAI,UAKhB,iBAAKR,UAAU,wBAAuB,WAClC,eAAIA,UAAU,QAAO,UACjB,SAAC,KAAI,CAACC,GAAIC,GAAsB,mBAAeH,EAAQI,KAAM,SACxDJ,EAAQU,cAGjB,iBAAMT,UAAU,WAAU,SACrBD,EAAQW,WAEb,iBAAMV,UAAU,WAAU,SAAED,EAAQY,gBAIpD,C,8IC0FA,UA5Ga,WACX,IAAQC,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAAjDH,YAEFI,IADkBH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMG,IAAI,IAAjDC,aACSC,EAAAA,EAAAA,OAEXC,EAAoB,WACxB,OAAKR,EAAYS,OACVT,EAAYU,QAAO,SAACC,EAAKxB,GAAO,OAAKwB,EAAOxB,EAAQyB,KAAK,GAAE,GAAGC,QAAQ,GAD7CC,OAAO,GAAGD,QAAQ,EAEpD,EAiCA,OACE,iBAAKzB,UAAU,oDAAmD,WAChE,SAAC,KAAU,CAAC2B,UAAU,SACrBf,GAAeA,EAAYS,QAAU,GACpC,UAAC,EAAAO,SAAQ,WACNhB,GAAeA,EAAYS,QAAU,GAAKT,EAAYiB,KAAI,SAAC9B,GAC1D,OACE,iBAAuBC,UAAU,qCAAoC,WACnE,SAAC,IAAW,CAACD,QAASA,KAEtB,iBAAKC,UAAU,4BAA2B,WACxC,iBAAKA,UAAU,sBAAqB,WAClC,0BAAKD,EAAQyB,MAAK,QAClB,wCAGF,mBAAQxB,UAAU,yCAAyC8B,QAAS,kBA/ClEC,EA+CiFhC,EAAQI,SA9CzG6B,EAAAA,EAAAA,GAA0BhB,EAAUe,GADrB,IAACA,CA+C6F,EAAC,UAC9F,SAAC,MAAgB,WAVbhC,EAAQI,IAetB,KAEA,gBAAKH,UAAU,2BAA0B,UACvC,gBAAKA,UAAU,YAAW,UACxB,gBAAKA,UAAU,MAAK,UAClB,iBAAKA,UAAU,SAAQ,WACrB,gBAAKA,UAAU,aAAY,UACzB,eAAIA,UAAU,oBAAmB,2BAEnC,0CACc,gCAAQoB,WAGtB,gBAAIpB,UAAU,oBAAmB,0BACnB,gCAAQoB,WAKtB,iEAOV,iBAAKpB,UAAU,iBAAgB,WAC7B,gBAAKA,UAAU,wBAAuB,UACpC,SAAC,IAAQ,CACPI,IAA8B,kCAGlC,gBAAKJ,UAAU,0BAAyB,UACtC,iDACwB,KACtB,SAAC,KAAI,CAACC,GAA6B,QAAQ,gCAOzD,C,2FC7GagC,EAAyB,SAACjB,EAAUjB,GAC7CiB,GAASkB,EAAAA,EAAAA,IAAiBnC,GAC9B,EAEaiC,EAA4B,SAAChB,EAAUe,GAChDf,GAASmB,EAAAA,EAAAA,IAAeJ,GAC5B,C","sources":["components/Contact/ContactInfo.js","pages/Cart/Cart.js","store/cart/cart-action.js"],"sourcesContent":["import { Link } from \"react-router-dom\"\r\nimport { DUMMY_USER_URL } from \"../../config/config\"\r\n\r\nconst ContactInfo = ({ contact }) => {\r\n    return (\r\n        <>\r\n            <div className=\"list-product__image\">\r\n                <Link to={process.env.PUBLIC_URL + `/contact/${contact._id}`}>\r\n                    <img\r\n                        src={contact?.img?.url || DUMMY_USER_URL}\r\n                        className=\"img-fluid img__circle\"\r\n                        alt=\"\"\r\n                    />\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"list-product__content\">\r\n                <h3 className=\"title\">\r\n                    <Link to={process.env.PUBLIC_URL + `/contact/${contact._id}`}>\r\n                        {contact.category}\r\n                    </Link>\r\n                </h3>\r\n                <span className=\"category\">\r\n                    {contact.company}\r\n                </span>\r\n                <span className=\"category\">{contact.jobTitle}</span>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContactInfo","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport { Breadcrumb } from \"../../components\";\r\nimport ContactInfo from \"../../components/Contact/ContactInfo\";\r\nimport { RiDeleteBin6Line } from 'react-icons/ri'\r\nimport { removeContactToCartAction } from \"../../store/cart/cart-action\";\r\nimport cogoToast from \"@hasanm95/cogo-toast\";\r\nimport { utilService } from \"../../services/util.service\";\r\n\r\nconst Cart = () => {\r\n  const { contactCart } = useSelector((state) => state.cart);\r\n  const { currentUser } = useSelector((state) => state.user)\r\n  const dispatch = useDispatch()\r\n\r\n  const getCartTotalPrice = () => {\r\n    if (!contactCart.length) return Number(2).toFixed(2)\r\n    return contactCart.reduce((acc, contact) => acc += contact.price, 0).toFixed(2)\r\n  }\r\n\r\n  const onRemove = (contactId) => {\r\n    removeContactToCartAction(dispatch, contactId)\r\n  }\r\n\r\n  // const onPurchase = async () => {\r\n  //   if (isUserOwnContact()) {\r\n  //     return cogoToast.error(\"You own this contact already\", { position: \"top-center\" })\r\n  //   }\r\n\r\n  //   if (!isUserHasCredits()) {\r\n  //     return cogoToast.error(\"Not enough credits\", { position: \"top-center\" })\r\n  //   }\r\n\r\n  //   try {\r\n  //     const res = await createContactTransaction(dispatch, item)\r\n  //     return cogoToast.success(\"Contact purchased\", { position: \"top-center\" })\r\n  //   } catch (err) {\r\n  //     return cogoToast.error(\"Cannot purchase contact\", { position: \"top-center\" })\r\n  //   }\r\n  // }\r\n\r\n  // const isUserOwnContact = () => {\r\n  //   const contact = currentUser.contactTransactions.find(trans => trans.contact._id === item._id)\r\n  //   return contact ? true : false\r\n  // }\r\n\r\n  // const isUserHasCredits = () => {\r\n  //   if (currentUser.credits >= utilService.getContactValueInCredit(item.price)) return true\r\n  //   else return false\r\n  // }\r\n\r\n  return (\r\n    <div className=\"body-wrapper space-pb--120 backgrounds__white-top\">\r\n      <Breadcrumb pageTitle=\"Cart\" />\r\n      {contactCart && contactCart.length >= 1 ? (\r\n        <Fragment>\r\n          {contactCart && contactCart.length >= 1 && contactCart.map((contact) => {\r\n            return (\r\n              <div key={contact._id} className=\"list-product border-bottom--medium\">\r\n                <ContactInfo contact={contact} />\r\n\r\n                <div className=\"flex align-center gap--25\">\r\n                  <div className=\"list-product__price\">\r\n                    <h2>{contact.price}$</h2>\r\n                    <p>22.07.23</p>\r\n                  </div>\r\n\r\n                  <button className=\"list-product__button icon-color__error\" onClick={() => onRemove(contact._id)}>\r\n                    <RiDeleteBin6Line />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n\r\n          <div className=\"grand-total space-mt--20\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"title-wrap\">\r\n                    <h4 className=\"cart-bottom-title\">Cart Total</h4>\r\n                  </div>\r\n                  <h5>\r\n                    Total price <span>${getCartTotalPrice()}</span>\r\n                  </h5>\r\n\r\n                  <h4 className=\"grand-total-title\">\r\n                    Grand Total <span>${getCartTotalPrice()}</span>\r\n                  </h4>\r\n                  {/* <Link to={process.env.PUBLIC_URL + \"/checkout\"}>\r\n                    Proceed to Checkout\r\n                  </Link> */}\r\n                  <button>Proceed to Checkout</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <div className=\"no-items-found\">\r\n          <div className=\"no-items-found__image\">\r\n            <ReactSVG\r\n              src={process.env.PUBLIC_URL + \"/assets/img/icons/cart.svg\"}\r\n            />\r\n          </div>\r\n          <div className=\"no-items-found__content\">\r\n            <p>\r\n              No Items in the cart.{\" \"}\r\n              <Link to={process.env.PUBLIC_URL + \"/shop\"}>Add Some</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Cart;\r\n","import { addCreditToCart, addToContactCart, deleteFromCart } from \"./cart-slice\"\r\n\r\n\r\nexport const addCreditToCartAction = (dispatch, credit) => {\r\n    dispatch(addCreditToCart(credit))\r\n}\r\n\r\nexport const addContactToCartAction = (dispatch, contact) => {\r\n    dispatch(addToContactCart(contact))\r\n}\r\n\r\nexport const removeContactToCartAction = (dispatch, contactId) => {\r\n    dispatch(deleteFromCart(contactId))\r\n}"],"names":["contact","className","to","process","_id","src","img","url","DUMMY_USER_URL","alt","category","company","jobTitle","contactCart","useSelector","state","cart","dispatch","user","currentUser","useDispatch","getCartTotalPrice","length","reduce","acc","price","toFixed","Number","pageTitle","Fragment","map","onClick","contactId","removeContactToCartAction","addContactToCartAction","addToContactCart","deleteFromCart"],"sourceRoot":""}