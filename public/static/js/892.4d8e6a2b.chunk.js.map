{"version":3,"file":"static/js/892.4d8e6a2b.chunk.js","mappings":"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","sources":["services/country.service.js","components/Core-Components/Dropdown/Dropdown.js","pages/EditProfile/EditProfile.js"],"sourcesContent":["import { CountryEP } from \"../config/config\"\r\nimport { httpService } from \"./http.service\"\r\n\r\nexport const countryService = {\r\n    query,\r\n}\r\n\r\nasync function query(filterBy = {}) {\r\n    try {\r\n        const res = await httpService.post(CountryEP.default, filterBy)\r\n        if (res.status === 'ok') return res.content\r\n        else return new Error('Cannot get countries')\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nconst DropdownButton = React.forwardRef(({ text, items, accessor, onChange }, ref) => {\r\n    const [selectedItem, setSelectedItem] = useState(text);\r\n\r\n    useEffect(() => {\r\n        setSelectedItem(text);\r\n    }, [text]);\r\n\r\n    const onSelect = (item) => {\r\n        setSelectedItem(item[accessor]);\r\n        onChange(item)\r\n    };\r\n\r\n    return (\r\n        <Dropdown>\r\n            <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\" ref={ref}>\r\n                {selectedItem}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n                {items.map((item, idx) => (\r\n                    <Dropdown.Item key={idx} onClick={() => onSelect(item)}>\r\n                        {item[accessor]}\r\n                    </Dropdown.Item>\r\n                ))}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    );\r\n});\r\n\r\nexport default DropdownButton","import { Breadcrumb } from \"../../components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { updateUser } from \"../../store/user/user-action\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { countryService } from \"../../services/country.service\";\r\nimport cogoToast from \"@hasanm95/cogo-toast\";\r\nimport DropdownButton from \"../../components/Core-Components/Dropdown/Dropdown\";\r\n\r\nconst EditProfile = () => {\r\n  const { currentUser } = useSelector(state => state.user)\r\n  const [countries, setCountries] = useState([])\r\n  const dispatch = useDispatch()\r\n  const { register, handleSubmit, control } = useForm({\r\n    defaultValues: {\r\n      fullname: currentUser?.fullname || \"\",\r\n      username: currentUser?.username || \"\",\r\n      email: currentUser?.email || \"\",\r\n      phone: currentUser?.phone || \"\",\r\n      countryPreferences: {}\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadCountries()\r\n  }, [])\r\n\r\n  const loadCountries = async () => {\r\n    try {\r\n      const countries = await countryService.query()\r\n      setCountries(countries)\r\n    } catch (error) {\r\n      cogoToast.error(\"Cannot get countries\", { position: \"top-center\" });\r\n    }\r\n  }\r\n\r\n  const onSubmit = async (data) => {\r\n    data.countryPreferences = [data.countryPreferences]\r\n    try {\r\n      await updateUser(dispatch, { ...data, _id: currentUser._id })\r\n      cogoToast.success(\"User updated\", { position: \"top-center\" });\r\n    } catch (err) {\r\n      cogoToast.error(\"Cannot update user\", { position: \"top-center\" });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"body-wrapper space-pb--120 backgrounds__white-top\">\r\n      <Breadcrumb pageTitle=\"Edit Profile\" />\r\n      <div className=\"edit-profile-body\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              {/* edit profile form */}\r\n              <div className=\"edit-profile-form\">\r\n\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                  <div className=\"edit-profile-form__single-field space-mb--30\">\r\n                    <label htmlFor=\"fullname\">Full Name</label>\r\n                    <input type=\"text\" name=\"fullname\" id=\"fullname\" placeholder=\"Enter Full Name\" {...register(\"fullname\")} />\r\n                  </div>\r\n                  <div className=\"edit-profile-form__single-field space-mb--30\">\r\n                    <label htmlFor=\"username\">User Name</label>\r\n                    <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Enter User Name\" {...register(\"username\")} />\r\n                  </div>\r\n                  <div className=\"edit-profile-form__single-field space-mb--30\">\r\n                    <label htmlFor=\"phone\">Phone</label>\r\n                    <input type=\"text\" name=\"phone\" id=\"phone\" placeholder=\"Enter Phone Number\" {...register(\"phone\")} />\r\n                  </div>\r\n                  <div className=\"edit-profile-form__single-field space-mb--30\">\r\n                    <label htmlFor=\"email\">Email Address</label>\r\n                    <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Enter Email Address\" {...register(\"email\")} />\r\n                  </div>\r\n                  <div className=\"edit-profile-form__single-field space-mb--30\">\r\n                    <label htmlFor=\"email\">Country Preferences</label>\r\n                    <Controller\r\n                      name=\"countryPreferences\"\r\n                      control={control}\r\n                      render={({ field }) => <DropdownButton {...field} text={(currentUser.countryPreferences.length && currentUser.countryPreferences[0]?.name) || 'Select country'} items={countries} accessor={'name'} />}>\r\n                    </Controller>\r\n                  </div>\r\n                  <button className=\"edit-profile-form__button\">Update</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n"],"names":["countryService","query","filterBy","httpService","CountryEP","res","status","content","Error","React","ref","text","items","accessor","onChange","useState","selectedItem","setSelectedItem","useEffect","Dropdown","variant","id","map","item","idx","onClick","onSelect","currentUser","useSelector","state","user","countries","setCountries","dispatch","useDispatch","useForm","defaultValues","fullname","username","email","phone","countryPreferences","register","handleSubmit","control","loadCountries","cogoToast","position","onSubmit","data","updateUser","_id","className","pageTitle","htmlFor","type","name","placeholder","render","field","length"],"sourceRoot":""}